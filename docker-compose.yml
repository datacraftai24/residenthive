version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: residenthive-postgres
    environment:
      POSTGRES_DB: residenthive_dev
      POSTGRES_USER: residenthive
      POSTGRES_PASSWORD: localdev123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U residenthive"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: residenthive-backend
    environment:
      DATABASE_URL: postgresql://residenthive:localdev123@postgres:5432/residenthive_dev
      FRONTEND_URL: http://localhost:8080
      PORT: 8000
      # Add other environment variables from .env
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      REPLIERS_API_KEY: ${REPLIERS_API_KEY:-}
      TAVILY_API_KEY: ${TAVILY_API_KEY:-}
      SESSION_SECRET: ${SESSION_SECRET:-local-dev-secret}
      JWT_SECRET: ${JWT_SECRET:-local-dev-jwt-secret}
      USE_ENHANCED_STRATEGY: ${USE_ENHANCED_STRATEGY:-true}
      USE_ENHANCED_EXTRACTION: ${USE_ENHANCED_EXTRACTION:-true}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn backend.app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: residenthive-frontend
    environment:
      VITE_BACKEND_URL: http://backend:8000
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      - backend

volumes:
  postgres_data:
